# Log Pengembangan SuperApps RT Web

## Struktur Proyek Utama
📁 client/ (Frontend berbasis React.js)
  📄 package.json (Konfigurasi frontend)
  📄 postcss.config.js (Konfigurasi PostCSS untuk TailwindCSS)
  📄 tailwind.config.js (Konfigurasi TailwindCSS)
  📁 src/ (Kode sumber frontend)
    📁 components/ (Komponen-komponen React)
      📁 layout/ (Komponen layout seperti sidebar, header)
        📄 Sidebar.js (Komponen sidebar navigasi utama, kini responsif)
        📄 Header.js (Komponen header aplikasi, kini responsif dengan tombol menu mobile)
        📄 Layout.js (Komponen layout utama yang mengatur Sidebar dan Header)
      📁 warga/ (Komponen terkait warga)
        📄 WargaSidebar.js (Komponen sidebar untuk menampilkan daftar Kepala Keluarga dengan fitur accordion)
        📄 WargaFilterComponent.js (Komponen UI untuk filter daftar warga individu)
      📁 kegiatan/ (Komponen terkait kegiatan)
      📁 iuran/ (Komponen terkait iuran)
      📁 kartuKeluarga/ (Komponen terkait kartu keluarga)
        📄 AddAnggotaForm.js (Form untuk menambah anggota keluarga)
        📄 CreateKKForm.js (Form untuk membuat KK baru)
        📄 RegistrasiKeluargaModal.js (Modal registrasi keluarga)
        📄 DetailKartuKeluargaModal.js (Modal untuk menampilkan detail kartu keluarga)
        📄 EditAnggotaFormModal.js (Modal form untuk mengedit data anggota keluarga)
        📄 DetailAnggotaModal.js (Modal CV-like untuk detail anggota)
      📁 modals/ (Komponen modal umum atau fitur spesifik)
        📄 ColumnSelectorModal.js (Modal untuk memilih kolom ekspor)
    📁 hooks/ (Hook kustom React)
      📄 useViewport.js (Hook untuk deteksi ukuran layar dan tipe perangkat)
    📁 pages/ (Halaman utama aplikasi)
      📄 Warga.js (Halaman terpadu untuk manajemen warga dan kartu keluarga)
    📁 services/ (Layanan API)
  📁 public/ (Aset statis frontend)
  📁 node_modules/ (Dependensi frontend)

📁 server/ (Backend berbasis Express.js)
  📄 package.json (Konfigurasi backend)
  📄 index.js (Entry point server)
  📁 routes/ (Definisi rute API)
  📁 controllers/ (Logika bisnis)
  📁 models/ (Model data)
  📁 node_modules/ (Dependensi backend)

📁 prisma/ (Konfigurasi Prisma ORM)

📁 public/ (Aset statis berbagi)

📄 package.json (Konfigurasi root untuk menjalankan client dan server)

## Riwayat Pengembangan

### [2023-06-15] - Setup Awal Proyek
- Inisialisasi struktur proyek client-server
- Setup React untuk frontend
- Setup Express untuk backend
- Penambahan Tailwind CSS untuk styling

### [2023-06-28] - Pengembangan UI Dasar
- Implementasi sidebar navigasi
- Implementasi header dengan fitur pencarian
- Konfigurasi routing dasar

### [2023-07-10] - Integrasi Database
- Setup Prisma sebagai ORM
- Definisi model data awal

### [2023-07-25] - Pengembangan Fitur Dasar
- Implementasi autentikasi
- Pengembangan CRUD dasar untuk data warga

### [2024-05-10] - Migrasi ke PostgreSQL Online
- Menghapus folder migrasi lama (SQLite) dan membuat migrasi baru untuk PostgreSQL.
- Mengubah datasource di schema.prisma menjadi PostgreSQL dan menggunakan env("DATABASE_URL").
- Menjalankan migrasi ke database PostgreSQL online (Railway) dengan sukses.
- Memastikan Prisma Client di-generate dan database online sinkron dengan schema terbaru.
- **File yang dimodifikasi**:
  - `prisma/schema.prisma` (ubah provider ke postgresql)
  - `prisma/migrations/` (folder migrasi baru dibuat)
- **Catatan**: Semua data lama di database online terhapus karena reset schema. Pastikan backup data penting sebelum migrasi.

### [2024-05-18] - Perbaikan Konfigurasi dan Bug
- Pembuatan file package.json di root untuk menjalankan client dan server secara bersamaan
- Perbaikan masalah konfigurasi TailwindCSS di PostCSS
- Migrasi dari `@tailwindcss/postcss` ke `tailwindcss` standar
- Memperbarui PostCSS config untuk menggunakan plugin TailwindCSS versi 3
- Menyelesaikan masalah port yang sudah digunakan
- Berhasil menjalankan aplikasi secara lengkap (frontend dan backend)

### [2024-05-22] - Pengembangan Modul Kegiatan RT
- Implementasi API backend untuk modul Kegiatan (controllers, routes)
- Pengembangan service untuk integrasi dengan API Kegiatan
- Pembuatan komponen UI untuk pengelolaan Kegiatan:
  - Form untuk menambah/mengedit kegiatan
  - Komponen untuk menampilkan detail kegiatan
  - Komponen untuk manajemen peserta kegiatan
- Implementasi fitur pencarian dan filter kegiatan
- Implementasi manajemen peserta kegiatan dengan fitur CRUD
- Integrasi dengan data Warga yang sudah ada

### [2024-05-27] - Migrasi ke PostgreSQL Supabase
- Migrasi database dari Railway PostgreSQL ke Supabase PostgreSQL untuk meningkatkan performa dan ketersediaan.
- Konfigurasi koneksi database dengan Supabase:
  - Update DATABASE_URL dan DIRECT_URL di file .env untuk menggunakan kredensial Supabase
  - Modifikasi schema.prisma untuk menggunakan directUrl untuk proses migrasi 
  - Menjalankan migrasi database ke Supabase dengan sukses
- Perbaikan koneksi database di server:
  - Modifikasi server/models/prisma.js untuk menangani parameter koneksi pgbouncer=true
  - Konfigurasi SSL dan opsi koneksi untuk meningkatkan performa dan stabilitas
- Penyesuaian query di controller untuk kompatibilitas dengan PostgreSQL Supabase:
  - Update nama kolom di server/controllers/wargaController.js agar sesuai dengan convention Prisma di PostgreSQL
- **File yang dimodifikasi**:
  - `.env` dan `server/.env` (update string koneksi database)
  - `prisma/schema.prisma` (penambahan directUrl untuk koneksi migrasi)
  - `server/models/prisma.js` (perbaikan handling koneksi PostgreSQL)
  - `server/controllers/wargaController.js` (penyesuaian query SQL)
- **Teknologi**:
  - Supabase PostgreSQL sebagai database primer
  - PgBouncer untuk connection pooling
  - pg (node-postgres) untuk koneksi database langsung

### [2024-06-12] - Pengembangan Modul Kartu Keluarga
- Implementasi API backend untuk modul Kartu Keluarga (controllers, routes)
- Integrasi dengan model data Warga yang sudah ada
- Implementasi relasi antara Kartu Keluarga dan Warga melalui model KeluargaWarga
- Pengembangan fitur:
  - CRUD untuk data Kartu Keluarga
  - Penambahan/Penghapusan anggota keluarga
  - Manajemen status hubungan anggota dalam keluarga
  - Validasi untuk perubahan Kepala Keluarga
- Registrasi route API `/api/kartukeluarga` di server
- **File yang dibuat**:
  - `server/controllers/kartuKeluargaController.js`
  - `server/routes/kartuKeluarga.js`
- **File yang dimodifikasi**:
  - `server/index.js` (untuk menambahkan route Kartu Keluarga)

### [2024-06-13] - Optimisasi Relasi KartuKeluarga dan Warga
- Optimisasi struktur data untuk menghindari redundansi data alamat
- Perubahan skema database:
  - Menghapus field alamat, rt, rw, kelurahan, kecamatan dari model Warga
  - Menambahkan field alamat_domisili opsional di model Warga (hanya untuk kasus khusus)
- Modifikasi controller Warga untuk memanfaatkan alamat dari Kartu Keluarga
- Implementasi relasi yang lebih efisien dengan pendekatan "single source of truth"
- Pembuatan migrasi database `remove_redundant_address_fields`
- **File yang dimodifikasi**:
  - `prisma/schema.prisma`
  - `server/controllers/wargaController.js`

### [2024-06-25] - Implementasi Fitur FAB Registrasi Keluarga
- Pengembangan frontend untuk pengelolaan Kartu Keluarga
- Implementasi halaman Kartu Keluarga dengan daftar KK dan informasi anggota
- Pengembangan fitur Floating ActionButton (FAB) untuk Registrasi Keluarga dengan dua alur utama:
  1. Buat KK Baru:
     - Form multi-step untuk data KK, Kepala Keluarga, dan anggota
     - Validasi input untuk setiap langkah
     - Fungsionalitas untuk menambahkan beberapa anggota keluarga
  2. Tambah ke KK yang Sudah Ada:
     - Pemilihan KK yang sudah terdaftar
     - Form input data anggota baru
- Integrasi dengan API kartuKeluarga dan warga
- Implementasi validasi untuk memeriksa NIK dan status hubungan
- Penambahan menu Kartu Keluarga di sidebar aplikasi
- **File yang dibuat**:
  - `client/src/pages/KartuKeluarga.js`
  - `client/src/components/kartuKeluarga/RegistrasiKeluargaModal.js`
  - `client/src/components/kartuKeluarga/CreateKKForm.js`
  - `client/src/components/kartuKeluarga/AddAnggotaForm.js`
- **File yang dimodifikasi**:
  - `client/src/services/api.js` (penambahan kartuKeluargaService)
  - `client/src/App.js` (penambahan route untuk KartuKeluarga)
  - `client/src/components/layout/Sidebar.js` (penambahan menu Kartu Keluarga)
- Build sukses dengan hanya beberapa warning eslint minor

### [2024-06-30] - Peningkatan UI/UX Manajemen Kepala Keluarga dan Anggota Keluarga
- Implementasi UI/UX baru untuk fitur manajemen Kepala Keluarga dan Anggota Keluarga berdasarkan desain yang disetujui
- Implementasi tampilan sidebar Kepala Keluarga dengan fitur accordion
- Pengembangan modal popup untuk menampilkan dan mengelola detail Kepala Keluarga dan Anggota Keluarga
- Integrasi tampilan accordion untuk menampilkan data Kepala Keluarga dan Anggota Keluarga secara hierarkis
- Implementasi tombol aksi untuk operasi CRUD pada Kepala Keluarga dan Anggota Keluarga
- Penggunaan animasi halus untuk meningkatkan pengalaman pengguna saat interaksi dengan komponen
- Pembaruan halaman Kartu Keluarga untuk mengintegrasikan sidebar warga dan modal detail
- **File yang dibuat**:
  - `client/src/components/kartuKeluarga/DetailKeluargaModal.js` (Modal detail keluarga dengan fitur accordion)
- **File yang dimodifikasi**:
  - `client/src/components/warga/WargaSidebar.js` (Implementasi fitur accordion dan aksi CRUD)
  - `client/src/pages/KartuKeluarga.js` (Integrasi sidebar dan modal detail)
- Build sukses dengan beberapa warning eslint yang sudah diperbaiki

### [2024-07-05] - Penyempurnaan UI/UX Fitur Manajemen Kepala Keluarga dan Anggota Keluarga
- Penerapan desain UI/UX baru yang lebih modern dan intuitif untuk fitur manajemen warga
- Peningkatan komponen sidebar Kepala Keluarga:
  - Desain accordion yang lebih menarik dengan animasi transisi halus
  - Penambahan detail informasi pada setiap item Kepala Keluarga
  - Integrasi ikon intuitif dan penanda status yang jelas
- Penyempurnaan modal detail kartu keluarga:
  - Layout hierarkis yang memisahkan informasi Kepala Keluarga dan Anggota
  - Implementasi accordion untuk data Anggota Keluarga dengan animasi expand/collapse
  - Peningkatan UI untuk tombol aksi (edit, hapus, tambah anggota)
- Pengembangan Floating Action Button (FAB) dengan animasi dan sub-menu
- Perbaikan tampilan form pendaftaran anggota keluarga:
  - Desain form yang lebih clean dengan validasi interaktif
  - Support untuk KK yang dipilih dari sidebar maupun modal
- Implementasi feedback visual untuk semua interaksi user (hover, aktif, loading)
- **File yang dimodifikasi**:
  - `client/src/components/warga/WargaSidebar.js` (UI yang lebih modern dengan feedback visual)
  - `client/src/components/kartuKeluarga/DetailKeluargaModal.js` (Peningkatan UI modal dan interaksi)
  - `client/src/components/kartuKeluarga/RegistrasiKeluargaModal.js` (Penyesuaian untuk alur pendaftaran yang lebih jelas)
  - `client/src/components/kartuKeluarga/AddAnggotaForm.js` (Peningkatan UI form dan validasi)
  - `client/src/pages/KartuKeluarga.js` (Integrasi FAB dan card dengan desain baru)
- Build sukses tanpa error dengan hanya beberapa warning minor

### [2024-07-10] - Penguatan Integrasi Warga dan Kartu Keluarga
- Implementasi relasi kepala keluarga yang lebih kuat antara model Warga dan KartuKeluarga
- Penambahan field `kepalaKeluargaId` di model KartuKeluarga untuk mereferensikan Warga yang menjadi kepala keluarga
- Implementasi skema relasi dua arah antara Warga dan KartuKeluarga (@relation name: "KepalaKeluarga")
- Penyesuaian controller untuk menggunakan relasi baru:
  - Pengembangan format response API untuk informasi kepala keluarga yang lebih lengkap
  - Validasi integritas data saat penambahan/perpindahan kepala keluarga
- Pengembangan API endpoint baru: `/kartukeluarga/:id/kepalakeluarga` untuk memperbarui kepala keluarga
- Peningkatan UI untuk menampilkan informasi kepala keluarga yang lebih jelas:
  - Tampilan ikon khusus (crown) untuk kepala keluarga di WargaSidebar
  - Penambahan section detail kepala keluarga di DetailKeluargaModal
- Persiapan dashboard terintegrasi untuk menampilkan data warga dan kartu keluarga secara terpadu
- Migrasi database sukses: `20250508053647_add_kepala_keluarga_id`
- **File yang dimodifikasi**:
  - `prisma/schema.prisma` (model Warga dan KartuKeluarga)
  - `server/controllers/kartuKeluargaController.js` (implementasi relasi kepala keluarga)
  - `server/controllers/wargaController.js` (response dengan data kepala keluarga)
  - `server/routes/kartuKeluarga.js` (penambahan rute baru)
  - `client/src/services/api.js` (update service untuk kepala keluarga)
  - `client/src/components/warga/WargaSidebar.js` (UI untuk kepala keluarga)
  - `client/src/components/kartuKeluarga/DetailKeluargaModal.js` (tampilan detail kepala keluarga)
- Build sukses tanpa error

### [2024-07-15] - Integrasi Modul Warga dan Kartu Keluarga
- Restrukturisasi UI untuk menyederhanakan navigasi dengan menggabungkan menu Warga dan Kartu Keluarga menjadi satu entry point
- Implementasi sistem tab pada halaman Warga:
  - Tab "Kartu Keluarga" (default) - Menampilkan manajemen unit keluarga
  - Tab "Daftar Warga" - Menampilkan daftar individu warga
- Pengembangan antarmuka dengan Kartu Keluarga sebagai tampilan default saat mengakses menu Warga
- Migrasi seluruh fungsionalitas dari halaman KartuKeluarga.js ke dalam halaman Warga.js
- Penambahan state dan fungsi untuk mengelola tampilan tab dan transisi antar tab
- Integrasi dengan komponen-komponen existing:
  - WargaSidebar untuk menampilkan daftar Kepala Keluarga
  - DetailKeluargaModal untuk detail kartu keluarga
  - RegistrasiKeluargaModal untuk pendaftaran kartu keluarga baru
- Implementasi fungsi untuk beralih antar tab dan melihat detail kartu keluarga dari data warga
- **File yang dihapus**:
  - `client/src/pages/KartuKeluarga.js` (fungsionalitas dipindahkan ke Warga.js)
- **File yang dimodifikasi**:
  - `client/src/components/layout/Sidebar.js` (menghapus item menu Kartu Keluarga)
  - `client/src/App.js` (menghapus route /kartukeluarga)
  - `client/src/pages/Warga.js` (penambahan struktur tab dan integrasi fungsionalitas Kartu Keluarga)
- Build sukses dengan beberapa warning eslint minor terkait variabel yang tidak digunakan

### [2024-07-18] - Implementasi Dasar Tampilan Mobile Responsif & Perbaikan Ikon Sidebar Desktop
- Pembuatan hook `useViewport` (`client/src/hooks/useViewport.js`) untuk deteksi ukuran layar dan tipe perangkat.
- Modifikasi komponen layout utama untuk mendukung tampilan mobile:
  - `client/src/components/layout/Layout.js`: Mengintegrasikan `useViewport` dan state management (`isMobileMenuOpen`) untuk sidebar mobile.
  - `client/src/components/layout/Header.js`: Menambahkan tombol hamburger menu (ikon `FiMenu`/`FiX`) yang hanya muncul di mobile, dan menyesuaikan tampilan elemen header lainnya untuk mobile.
  - `client/src/components/layout/Sidebar.js`:
    - Implementasi off-canvas sidebar untuk tampilan mobile, dikontrol oleh tombol hamburger di header. Termasuk animasi slide-in/out dan tombol tutup (`FiX`).
    - Sidebar mobile otomatis tertutup saat navigasi antar halaman.
    - Memperbaiki ikon tombol ciut/perluas (collapse/expand) untuk sidebar desktop menggunakan `FiChevronsLeft` dan `FiChevronsRight` untuk kejelasan visual yang lebih baik.
- Build aplikasi berhasil setelah setiap tahap modifikasi.
- Pengujian awal tampilan mobile dan desktop menunjukkan fungsionalitas dasar (navigasi sidebar, header) berjalan sesuai rencana.

### [2024-07-19] - Penyesuaian WargaSidebar, Perbaikan FAB, Implementasi Speed Dial, Perbaikan DetailKartuKeluargaPanel, dan Scroll Into View untuk Item KK Aktif
- **`WargaSidebar.js`**: 
    - Diintegrasikan dengan `useViewport` untuk penyesuaian styling awal di mobile (padding, font, ikon).
    - **Informasi RT/RW dihapus sepenuhnya** dari tampilan daftar KK (baik mobile maupun desktop) sesuai permintaan pengguna untuk menyederhanakan tampilan.
- **FAB `Warga.js`**:
    - Awalnya diubah menjadi `position: fixed` untuk mengatasi masalah ikut ter-scroll.
    - Kemudian diimplementasikan logika hide/show on scroll menggunakan `framer-motion` (dihapus karena membingungkan user).
    - Diimplementasikan **Speed Dial FAB** dengan dua aksi: "Tambah Kartu Keluarga Baru" dan "Tambah Anggota Keluarga" (sementara menampilkan toast).
    - Warna label Speed Dial diubah menjadi `bg-gray-700 text-white`.
    - Warning ESLint `useRef no-unused-vars` diperbaiki.
- **Placeholder Detail KK `Warga.js`**: Fungsi klik pada link "Atau buat Kartu Keluarga baru" di placeholder panel detail KK dihapus.
- **`DetailKartuKeluargaPanel.js`**:
    - Tombol "Tambah Anggota" dipindahkan dari detail Kepala Keluarga ke header bagian "Anggota Keluarga Lainnya".
    - Ikon aksi di header panel utama diperbesar, diberi padding, dan jarak antar tombol disesuaikan.
    - Styling tombol aksi individu Kepala Keluarga ("Lihat Detail", "Edit Profil") diubah menjadi tombol border standar yang lebih kecil.
    - **Penyesuaian Responsif Tambahan**: Dilakukan penyesuaian lebih lanjut untuk tata letak dan ukuran elemen (padding, font, ikon, margin) di mode seluler menggunakan `useViewport` untuk memastikan tampilan yang lebih optimal di berbagai ukuran layar seluler.
    - **Perbaikan Tata Letak Mobile Lanjutan**: Mengatasi masalah port yang bentrok (EADDRINUSE) dengan menghentikan proses yang ada menggunakan `npx kill-port`. Melakukan penyesuaian lebih lanjut pada header `DetailKartuKeluargaPanel.js` di mode mobile dengan mengatur `space-x` antar ikon, membuat judul (`<h2>`) menggunakan `flex-grow` dan `min-w-0` serta `break-words` pada span nama keluarga untuk penanganan teks panjang. Menambahkan `justify-center` pada kontainer tombol "Lihat Detail" dan "Edit Profil" agar terpusat di mobile.
    - **Perbaikan Tombol Aksi Kepala Keluarga**: Menambahkan `w-full` ke `div` kontainer tombol "Lihat Detail" dan "Edit Profil" di `DetailKartuKeluargaPanel.js` untuk memastikan grup tombol tersebut rata tengah di tampilan seluler.
- **`WargaSidebar.js` (Scroll Into View)**: Mengimplementasikan `scrollIntoView` untuk item KK yang aktif. Ketika sebuah KK dipilih, sidebar akan otomatis scroll untuk memastikan item tersebut sepenuhnya terlihat, terutama jika sebelumnya terpotong oleh panel detail.
    - Menggunakan `useRef` untuk menyimpan referensi ke elemen item KK.
    - Menggunakan `useEffect` untuk memantau perubahan `selectedKKId` dan memicu scroll.
- Semua build berhasil setelah modifikasi terkait.