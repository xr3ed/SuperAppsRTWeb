generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Warga {
  id                 Int               @id @default(autoincrement())
  nik                String            @unique
  namaLengkap        String
  tempatLahir        String?
  tanggalLahir       DateTime?
  jenisKelamin       String?
  alamat_domisili    String?
  agama              String?
  statusPerkawinan   String?
  pekerjaan          String?
  pendidikanTerakhir String?
  kewarganegaraan    String?
  nomorTelepon       String?
  email              String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  iuran              Iuran[]
  keluarga           KeluargaWarga[]
  kegiatan           PesertaKegiatan[]
}

model KartuKeluarga {
  id             Int             @id @default(autoincrement())
  nomorKK        String          @unique
  kepalaKeluarga String
  alamat         String
  rt             String
  rw             String
  kelurahan      String?
  kecamatan      String?
  kabupatenKota  String?
  provinsi       String?
  kodePos        String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  anggota        KeluargaWarga[]
}

model KeluargaWarga {
  id              Int           @id @default(autoincrement())
  wargaId         Int
  kartuKeluargaId Int
  statusHubungan  String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  kartuKeluarga   KartuKeluarga @relation(fields: [kartuKeluargaId], references: [id])
  warga           Warga         @relation(fields: [wargaId], references: [id])

  @@unique([wargaId, kartuKeluargaId])
}

model Iuran {
  id               Int      @id @default(autoincrement())
  wargaId          Int
  jenisIuran       String
  jumlah           Float
  tanggalBayar     DateTime
  bulanTahun       String?
  keterangan       String?
  metodePembayaran String?
  statusPembayaran String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  warga            Warga    @relation(fields: [wargaId], references: [id])
}

model Pengumuman {
  id             Int       @id @default(autoincrement())
  judul          String
  isi            String
  tanggalMulai   DateTime
  tanggalSelesai DateTime?
  prioritas      String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Kegiatan {
  id             Int               @id @default(autoincrement())
  nama           String
  deskripsi      String
  tanggalMulai   DateTime
  tanggalSelesai DateTime?
  lokasi         String?
  anggaran       Float?
  statusKegiatan String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  peserta        PesertaKegiatan[]
}

model PesertaKegiatan {
  id              Int      @id @default(autoincrement())
  wargaId         Int
  kegiatanId      Int
  statusKehadiran String?
  peran           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  kegiatan        Kegiatan @relation(fields: [kegiatanId], references: [id])
  warga           Warga    @relation(fields: [wargaId], references: [id])

  @@unique([wargaId, kegiatanId])
}

model Inventaris {
  id               Int       @id @default(autoincrement())
  nama             String
  jumlah           Int
  kondisi          String
  tanggalPerolehan DateTime?
  sumberDana       String?
  lokasi           String?
  keterangan       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Laporan {
  id                Int       @id @default(autoincrement())
  judul             String
  deskripsi         String
  kategori          String
  status            String
  prioritas         String?
  lokasiMasalah     String?
  tanggalLaporan    DateTime  @default(now())
  tanggalPenanganan DateTime?
  tanggalSelesai    DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
} 